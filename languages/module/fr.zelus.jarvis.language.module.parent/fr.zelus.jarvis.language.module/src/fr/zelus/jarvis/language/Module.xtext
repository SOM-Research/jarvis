grammar fr.zelus.jarvis.language.Module with org.eclipse.xtext.common.Terminals

import "fr.zelus.jarvis.module" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "fr.zelus.jarvis.intent" as intent

Module returns Module:
	{Module}
	'Module' name=EString
	'path' jarvisModulePath=EString
	('providers' '{'
		inputProviderDefinitions+=InputProviderDefinition
		(inputProviderDefinitions+=InputProviderDefinition)*
	'}')?
	('intents' '{'
		intentDefinitions+=IntentDefinition
		(intentDefinitions+=IntentDefinition)*
	'}')?
	('actions' '{' 
		actions+=Action 
		(actions+=Action)* 
	'}')?
	;
	
InputProviderDefinition returns InputProviderDefinition:
	{InputProviderDefinition}
	'name' name=EString
;

IntentDefinition returns intent::IntentDefinition:
	{intent::IntentDefinition}
	name=EString ('('outContextParameters+=IntentParameter(',' outContextParameters+=IntentParameter)*')')?
	'{'
		'inputs' '{'
			trainingSentences+=EString (trainingSentences+=EString)*
		'}'
		(inContexts+=InContextDefinition)*
		(outContexts+=OutContextDefinition)?
	'}'
	;

IntentParameter returns intent::IntentParameter:
	{intent::IntentParameter}
	key=EString ':' type=EString;
	
InContextDefinition returns intent::Context:
	{intent::Context}
	'inContext' name=EString ('(' 'lifeSpan' '='lifeSpan=INT ')')?
;
	
OutContextDefinition returns intent::Context:
	{intent::Context}
	'outContext' name=EString ('(' 'lifeSpan' '=' lifeSpan=INT ')')?
	('{'
		'params' '{'
			(parameters+=ContextParameter)+
		'}'
	'}')?
;

ContextParameter returns intent::ContextParameter:
	{intent::ContextParameter}
	name=EString '<-' textFragment=EString '('entityType=EString')'
;

Action returns Action:
	{Action}
	name=EString ('('parameters+=Parameter (',' parameters+=Parameter)*')')?;



Parameter returns Parameter:
	{Parameter}
	key=EString ':' type=EString;

EString returns ecore::EString:
	STRING | ID;
